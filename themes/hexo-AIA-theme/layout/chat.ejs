<!DOCTYPE html>
<html lang="en">
<head>
    <!-- <meta charset="UTF-8"> -->
    <!-- <meta name="viewport" content="width=device-width, initial-scale=1.0"> -->
    <link rel="stylesheet" href="/css/partial/chat.css">
    <title>Chat Box</title>
</head>
<body>
    <div class="chat-container" id="chat-container">
        <!-- Chat messages will be appended here -->
    </div>
    <div class="input-container">
        <input type="text" id="chat-input" placeholder="Type a message...">
        <button onclick="sendMessage()">Send</button>
    </div>

    <script>
        const chatContainer = document.getElementById('chat-container');
        const chatInput = document.getElementById('chat-input');

        async function fetchMessages() {
            try {
                const response = await fetch('https://api.siliconcloud.com/chat/messages');
                const messages = await response.json();
                chatContainer.innerHTML = '';
                messages.forEach(message => {
                    const messageElement = document.createElement('div');
                    messageElement.className = 'message';
                    messageElement.textContent = message.text;
                    chatContainer.appendChild(messageElement);
                });
            } catch (error) {
                console.error('Error fetching messages:', error);
            }
        }

        async function sendMessage() {
            const messageText = chatInput.value;
            if (!messageText) return;

            try {
                await fetch('https://api.siliconcloud.com/chat/messages', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ text: messageText })
                });
                chatInput.value = '';
                fetchMessages();
            } catch (error) {
                console.error('Error sending message:', error);
            }
        }

        // Fetch messages initially and set an interval to fetch new messages every 5 seconds
        fetchMessages();
        setInterval(fetchMessages, 5000);
    </script>
</body>
</html>